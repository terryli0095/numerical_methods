def trap_1(N):
    """
    integrate cos(x)/sqrt(x) from 0 to 1 using trapezoidal rule
    
    Input
    N (int): Number of partitions
    
    Output
    Is (float):  integral of sin/sqrt(x)
    Ic (float):  integral of cos/sqrt(x)
    """
    x_hat = numpy.linspace(0.0, 1.0, N+1)
    Fc= lambda x:numpy.cos(x)/numpy.sqrt(x)
    Fs= lambda x:numpy.sin(x)/numpy.sqrt(x)
    delta_x = x_hat[1] - x_hat[0]
    
    
    Qfc = numpy.zeros(x_hat.shape)
    Qfc[0] =(Fc(x_hat[1])) * delta_x / 2.0

    for i in xrange(1, N):
        Qfc[i] = Qfc[i - 1] + (Fc(x_hat[i + 1]) + Fc(x_hat[i])) * delta_x / 2.0

    Qfs = numpy.zeros(x_hat.shape)
    Qfs[0] =(Fs(x_hat[1])) * delta_x / 2.0

    for i in xrange(1, N):
        Qfs[i] = Qfs[i - 1] + (Fs(x_hat[i + 1]) + Fs(x_hat[i])) * delta_x / 2.0
    
    Ic= Qfc[-2]
    Is= Qfs[-2]

    return Is, Ic
